// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package boot

import (
	"context"
	"github.com/dfioravanti/go-rest/rest"
	"github.com/jackc/pgx/v5/pgxpool"
	"log/slog"
	"os"
)

// Injectors from wire.go:

func InitApp(dsn string) rest.Application {
	logger := createLogger()
	pool := createDBConnection(dsn, logger)
	snippetPostgresRepository := provideSnippetRepository(pool)
	snippetService := provideSnippetService(snippetPostgresRepository)
	snippetHandler := provideSnippetHandler(snippetService)
	application := rest.NewApplication(logger, pool, snippetHandler)
	return application
}

// wire.go:

func createLogger() *slog.Logger {
	logger := slog.New(slog.NewTextHandler(os.Stdout, &slog.HandlerOptions{
		Level:     slog.LevelDebug,
		AddSource: true,
	}))

	return logger
}

func createDBConnection(dsn string, logger *slog.Logger) *pgxpool.Pool {

	dbPool, err := pgxpool.New(context.Background(), dsn)
	if err != nil {
		logger.Error(err.Error())
	}
	err = dbPool.Ping(context.Background())
	if err != nil {
		logger.Error(err.Error())
	}

	return dbPool
}
